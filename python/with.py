# Инструкция позволяет задействовать менеджер контекста
# для исполнения кода, находящего в её теле. Это, в частности,
# позволяет обособить блоки, использующие try except finally
# и повысить шансы их повторного использования.


class MyContextManager(object):
    def __enter__(self):
        print("enter")

    def __exit__(self, exc_type, exc_value, traceback):
        print("exit")


with MyContextManager():  # enter
    print("FOO")  # FOO
# exit

# Выражение после with вычисляется для получения менеджера контекста;
# Для последующего использования запоминается метод менеджера __exit__();
# Вызывается метод менеджера __enter__();
# Если после as указана цель, то в неё помещается результат __enter__();
# Выполняется тело инструкции;
# Вызывается метод __exit__().
# Если выход обусловлен исключением, то данные о нём передаются в метод.
# Если __exit__() вернул ложь, то по выходу из контекстного менеджера
# исключение продолжит своё восхождение по стеку.
# В случае истины, исключение будет подавлено.

#   with manager1() as one, manager2() as two:
#   do()

# То же самое, вложенно:
#   with manager1() as one:
#   with manager2() as two:
#       do()


# 'r' - Открывает файл только для чтения.
# Указатель файла помещается в начале файла. Это режим "по умолчанию".

# 'rb' - Открывает файл в бинарном режиме только для чтения.
# Указатель  файла помещается в начале файла. Это режим "по умолчанию".

# 'r+' - Открывает файл для чтения и записи.
# Указатель файла помещается в начало файла.

# 'rb+' - Открывает файл в бинарном режиме для чтения и записи.
# Указатель файла помещается в начале файла. Это режим "по умолчанию".

# 'w' - Открывает файл только для записи. 
# Перезаписывает файл, если файл существует.
# Если файл не существует, создает новый файл для записи.

# 'wb' - Открывает файл в бинарном режиме только для записи.
# Перезаписывает файл, если файл существует.
# Если файл не существует, создает новый файл для записи.

# 'w+' - Открывает файл для записи и чтения.
# Перезаписывает существующий файл, если файл существует.
# Если файл не существует, создается новый файл для  чтения и записи.

# 'wb+' - Открывает файл в бинарном режиме для записи и чтения.
# Перезаписывает существующий файл, если файл существует.
# Если файл не существует, создается новый файл для чтения и записи.

# 'a' - Открывает файл для добавления. 
# Указатель файла находится в конце файла, если файл существует.
# То есть файл находится в режиме добавления.
# Если файл не существует, он создает новый файл для записи.

# 'ab' - Открывает файл в бинарном режиме для добавления.
# Указатель файла находится в конце файла, если файл существует. 
# То есть файл находится в режиме добавления. 
# Если файл не существует, он создает новый файл для записи.

# 'a+' - Открывает файл для добавления и чтения. 
# Указатель файла находится в конце файла, если файл существует.
# Файл открывается в режиме добавления. 
# Если файл не существует, он создает новый файл для чтения и записи.

# 'ab+' - Открывает файл в бинарном режиме для добавления и чтения. 
# Указатель файла находится в конце файла, если файл существует. 
# Файл открывается в режиме добавления. 
# Если файл не существует, он создает новый файл для чтения и записи.
